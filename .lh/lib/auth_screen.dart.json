{
    "sourceFile": "lib/auth_screen.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 10,
            "patches": [
                {
                    "date": 1733476966428,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1733477479325,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,40 +10,10 @@\n class _AuthScreenState extends State<AuthScreen> {\r\n   final TextEditingController emailController = TextEditingController();\r\n   final TextEditingController passwordController = TextEditingController();\r\n   \r\n-  void signUp() async {\r\n-    final response = await Supabase.instance.client.auth.signUp(\r\n-      emailController.text,\r\n-      passwordController.text,\r\n-    );\r\n-    if (response.error == null) {\r\n-      Navigator.pushReplacement(\r\n-        context,\r\n-        MaterialPageRoute(builder: (context) => HomeScreen()),\r\n-      );\r\n-    } else {\r\n-      // Handle error (e.g., show a dialog)\r\n-      print(response.error!.message);\r\n-    }\r\n-  }\r\n+ \r\n \r\n-  void signIn() async {\r\n-    final response = await Supabase.instance.client.auth.signInWithPassword(\r\n-      email: emailController.text,\r\n-      password: passwordController.text,\r\n-    );\r\n-    if (response.error == null) {\r\n-      Navigator.pushReplacement(\r\n-        context,\r\n-        MaterialPageRoute(builder: (context) => HomeScreen()),\r\n-      );\r\n-    } else {\r\n-      // Handle error (e.g., show a dialog)\r\n-      print(response.error!.message);\r\n-    }\r\n-  }\r\n-\r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Scaffold(\r\n       appBar: AppBar(title: Text('Supabase Authentication')),\r\n"
                },
                {
                    "date": 1733477488758,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,8 @@\n class _AuthScreenState extends State<AuthScreen> {\r\n   final TextEditingController emailController = TextEditingController();\r\n   final TextEditingController passwordController = TextEditingController();\r\n   \r\n- \r\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Scaffold(\r\n"
                },
                {
                    "date": 1733479839241,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n import 'package:flutter/material.dart';\r\n-import 'package:supabase_flutter/supabase_flutter.dart';\r\n+import 'package:provider/provider.dart';\r\n+import 'controllers/auth_controller.dart';\r\n import 'home_screen.dart';\r\n \r\n class AuthScreen extends StatefulWidget {\r\n   @override\r\n@@ -9,10 +10,37 @@\n \r\n class _AuthScreenState extends State<AuthScreen> {\r\n   final TextEditingController emailController = TextEditingController();\r\n   final TextEditingController passwordController = TextEditingController();\r\n-  \r\n \r\n+  void signUp() async {\r\n+    try {\r\n+      await Provider.of<AuthController>(context, listen: false)\r\n+          .signUp(emailController.text, passwordController.text);\r\n+      Navigator.pushReplacement(\r\n+        context,\r\n+        MaterialPageRoute(builder: (context) => HomeScreen()),\r\n+      );\r\n+    } catch (e) {\r\n+      // Handle error (e.g., show a dialog)\r\n+      print(e);\r\n+    }\r\n+  }\r\n+\r\n+  void signIn() async {\r\n+    try {\r\n+      await Provider.of<AuthController>(context, listen: false)\r\n+          .signIn(emailController.text, passwordController.text);\r\n+      Navigator.pushReplacement(\r\n+        context,\r\n+        MaterialPageRoute(builder: (context) => HomeScreen()),\r\n+      );\r\n+    } catch (e) {\r\n+      // Handle error (e.g., show a dialog)\r\n+      print(e);\r\n+    }\r\n+  }\r\n+\r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Scaffold(\r\n       appBar: AppBar(title: Text('Supabase Authentication')),\r\n"
                },
                {
                    "date": 1733482283182,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,33 +11,47 @@\n class _AuthScreenState extends State<AuthScreen> {\r\n   final TextEditingController emailController = TextEditingController();\r\n   final TextEditingController passwordController = TextEditingController();\r\n \r\n+  void showSnackBar(String message, {Color backgroundColor = Colors.red}) {\r\n+    ScaffoldMessenger.of(context).showSnackBar(\r\n+      SnackBar(\r\n+        content: Text(message),\r\n+        backgroundColor: backgroundColor,\r\n+        duration: Duration(seconds: 3),\r\n+      ),\r\n+    );\r\n+  }\r\n+\r\n   void signUp() async {\r\n     try {\r\n       await Provider.of<AuthController>(context, listen: false)\r\n           .signUp(emailController.text, passwordController.text);\r\n+      \r\n+      showSnackBar('Sign-up successful!', backgroundColor: Colors.green);\r\n+      \r\n       Navigator.pushReplacement(\r\n         context,\r\n         MaterialPageRoute(builder: (context) => HomeScreen()),\r\n       );\r\n     } catch (e) {\r\n-      // Handle error (e.g., show a dialog)\r\n-      print(e);\r\n+      showSnackBar(e.toString());\r\n     }\r\n   }\r\n \r\n   void signIn() async {\r\n     try {\r\n       await Provider.of<AuthController>(context, listen: false)\r\n           .signIn(emailController.text, passwordController.text);\r\n+      \r\n+      showSnackBar('Sign-in successful!', backgroundColor: Colors.green);\r\n+      \r\n       Navigator.pushReplacement(\r\n         context,\r\n         MaterialPageRoute(builder: (context) => HomeScreen()),\r\n       );\r\n     } catch (e) {\r\n-      // Handle error (e.g., show a dialog)\r\n-      print(e);\r\n+      showSnackBar(e.toString());\r\n     }\r\n   }\r\n \r\n   @override\r\n"
                },
                {
                    "date": 1733484239487,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,9 @@\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Scaffold(\r\n-      appBar: AppBar(title: Text('Supabase Authentication')),\r\n+      appBar: AppBar(title: const Text('Supabase Authentication')),\r\n       body: Padding(\r\n         padding: const EdgeInsets.all(16.0),\r\n         child: Column(\r\n           children: [\r\n"
                },
                {
                    "date": 1733484244873,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,9 @@\n         child: Column(\r\n           children: [\r\n             TextField(\r\n               controller: emailController,\r\n-              decoration: InputDecoration(labelText: 'Email'),\r\n+              decoration: const InputDecoration(labelText: 'Email'),\r\n             ),\r\n             TextField(\r\n               controller: passwordController,\r\n               decoration: InputDecoration(labelText: 'Password'),\r\n"
                },
                {
                    "date": 1733484251178,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,12 +67,12 @@\n               decoration: const InputDecoration(labelText: 'Email'),\r\n             ),\r\n             TextField(\r\n               controller: passwordController,\r\n-              decoration: InputDecoration(labelText: 'Password'),\r\n+              decoration: const InputDecoration(labelText: 'Password'),\r\n               obscureText: true,\r\n             ),\r\n-            SizedBox(height: 20),\r\n+            const SizedBox(height: 20),\r\n             ElevatedButton(onPressed: signUp, child: Text('Sign Up')),\r\n             ElevatedButton(onPressed: signIn, child: Text('Sign In')),\r\n           ],\r\n         ),\r\n"
                },
                {
                    "date": 1733484257177,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,10 +71,10 @@\n               decoration: const InputDecoration(labelText: 'Password'),\r\n               obscureText: true,\r\n             ),\r\n             const SizedBox(height: 20),\r\n-            ElevatedButton(onPressed: signUp, child: Text('Sign Up')),\r\n-            ElevatedButton(onPressed: signIn, child: Text('Sign In')),\r\n+            ElevatedButton(onPressed: signUp, child: const Text('Sign Up')),\r\n+            ElevatedButton(onPressed: signIn, child: const Text('Sign In')),\r\n           ],\r\n         ),\r\n       ),\r\n     );\r\n"
                },
                {
                    "date": 1733484734178,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,5 @@\n+import 'dart:io'; // Import this for SocketException\r\n import 'package:flutter/material.dart';\r\n import 'package:provider/provider.dart';\r\n import 'controllers/auth_controller.dart';\r\n import 'home_screen.dart';\r\n@@ -10,8 +11,9 @@\n \r\n class _AuthScreenState extends State<AuthScreen> {\r\n   final TextEditingController emailController = TextEditingController();\r\n   final TextEditingController passwordController = TextEditingController();\r\n+  final GlobalKey<FormState> _formKey = GlobalKey<FormState>();\r\n \r\n   void showSnackBar(String message, {Color backgroundColor = Colors.red}) {\r\n     ScaffoldMessenger.of(context).showSnackBar(\r\n       SnackBar(\r\n@@ -21,62 +23,103 @@\n       ),\r\n     );\r\n   }\r\n \r\n-  void signUp() async {\r\n-    try {\r\n-      await Provider.of<AuthController>(context, listen: false)\r\n-          .signUp(emailController.text, passwordController.text);\r\n-      \r\n-      showSnackBar('Sign-up successful!', backgroundColor: Colors.green);\r\n-      \r\n-      Navigator.pushReplacement(\r\n-        context,\r\n-        MaterialPageRoute(builder: (context) => HomeScreen()),\r\n-      );\r\n-    } catch (e) {\r\n-      showSnackBar(e.toString());\r\n+  String? emailValidator(String? value) {\r\n+    if (value == null || value.isEmpty) {\r\n+      return 'Please enter your email.';\r\n     }\r\n+    // Regular expression for validating email format\r\n+    String pattern =\r\n+        r'^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$';\r\n+    RegExp regex = RegExp(pattern);\r\n+    if (!regex.hasMatch(value)) {\r\n+      return 'Please enter a valid email address.';\r\n+    }\r\n+    return null;\r\n   }\r\n \r\n+  String? passwordValidator(String? value) {\r\n+    if (value == null || value.isEmpty) {\r\n+      return 'Please enter your password.';\r\n+    }\r\n+    if (value.length < 6) {\r\n+      return 'Password must be at least 6 characters long.';\r\n+    }\r\n+    return null;\r\n+  }\r\n+\r\n   void signIn() async {\r\n-    try {\r\n-      await Provider.of<AuthController>(context, listen: false)\r\n-          .signIn(emailController.text, passwordController.text);\r\n-      \r\n-      showSnackBar('Sign-in successful!', backgroundColor: Colors.green);\r\n-      \r\n-      Navigator.pushReplacement(\r\n-        context,\r\n-        MaterialPageRoute(builder: (context) => HomeScreen()),\r\n-      );\r\n-    } catch (e) {\r\n-      showSnackBar(e.toString());\r\n+    if (_formKey.currentState!.validate()) {\r\n+      try {\r\n+        await Provider.of<AuthController>(context, listen: false)\r\n+            .signIn(emailController.text, passwordController.text);\r\n+        \r\n+        showSnackBar('Sign-in successful!', backgroundColor: Colors.green);\r\n+        \r\n+        Navigator.pushReplacement(\r\n+          context,\r\n+          MaterialPageRoute(builder: (context) => HomeScreen()),\r\n+        );\r\n+      } catch (e) {\r\n+        if (e is SocketException) {\r\n+          showSnackBar('No internet connection. Please try again.');\r\n+        } else {\r\n+          showSnackBar(e.toString());\r\n+        }\r\n+      }\r\n     }\r\n   }\r\n \r\n+  void signUp() async {\r\n+    if (_formKey.currentState!.validate()) {\r\n+      try {\r\n+        await Provider.of<AuthController>(context, listen: false)\r\n+            .signUp(emailController.text, passwordController.text);\r\n+        \r\n+        showSnackBar('Sign-up successful!', backgroundColor: Colors.green);\r\n+        \r\n+        Navigator.pushReplacement(\r\n+          context,\r\n+          MaterialPageRoute(builder: (context) => HomeScreen()),\r\n+        );\r\n+      } catch (e) {\r\n+        if (e is SocketException) {\r\n+          showSnackBar('No internet connection. Please try again.');\r\n+        } else {\r\n+          showSnackBar(e.toString());\r\n+        }\r\n+      }\r\n+    }\r\n+  }\r\n+\r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Scaffold(\r\n       appBar: AppBar(title: const Text('Supabase Authentication')),\r\n       body: Padding(\r\n         padding: const EdgeInsets.all(16.0),\r\n-        child: Column(\r\n-          children: [\r\n-            TextField(\r\n-              controller: emailController,\r\n-              decoration: const InputDecoration(labelText: 'Email'),\r\n-            ),\r\n-            TextField(\r\n-              controller: passwordController,\r\n-              decoration: const InputDecoration(labelText: 'Password'),\r\n-              obscureText: true,\r\n-            ),\r\n-            const SizedBox(height: 20),\r\n-            ElevatedButton(onPressed: signUp, child: const Text('Sign Up')),\r\n-            ElevatedButton(onPressed: signIn, child: const Text('Sign In')),\r\n-          ],\r\n+        child: Form(\r\n+          key: _formKey,\r\n+          child: Column(\r\n+            children: [\r\n+              TextFormField(\r\n+                controller: emailController,\r\n+                decoration: const InputDecoration(labelText: 'Email'),\r\n+                validator: emailValidator,\r\n+              ),\r\n+              TextFormField(\r\n+                controller: passwordController,\r\n+                decoration: const InputDecoration(labelText: 'Password'),\r\n+                obscureText: true,\r\n+                validator: passwordValidator,\r\n+              ),\r\n+              const SizedBox(height: 20),\r\n+              ElevatedButton(onPressed: signUp, child: const Text('Sign Up')),\r\n+              ElevatedButton(onPressed: signIn, child: const Text('Sign In')),\r\n+            ],\r\n+          ),\r\n         ),\r\n       ),\r\n     );\r\n   }\r\n-}\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1733484759751,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,8 +26,9 @@\n \r\n   String? emailValidator(String? value) {\r\n     if (value == null || value.isEmpty) {\r\n       return 'Please enter your email.';\r\n+      \r\n     }\r\n     // Regular expression for validating email format\r\n     String pattern =\r\n         r'^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$';\r\n"
                }
            ],
            "date": 1733476966428,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\r\nimport 'package:supabase_flutter/supabase_flutter.dart';\r\nimport 'home_screen.dart';\r\n\r\nclass AuthScreen extends StatefulWidget {\r\n  @override\r\n  _AuthScreenState createState() => _AuthScreenState();\r\n}\r\n\r\nclass _AuthScreenState extends State<AuthScreen> {\r\n  final TextEditingController emailController = TextEditingController();\r\n  final TextEditingController passwordController = TextEditingController();\r\n  \r\n  void signUp() async {\r\n    final response = await Supabase.instance.client.auth.signUp(\r\n      emailController.text,\r\n      passwordController.text,\r\n    );\r\n    if (response.error == null) {\r\n      Navigator.pushReplacement(\r\n        context,\r\n        MaterialPageRoute(builder: (context) => HomeScreen()),\r\n      );\r\n    } else {\r\n      // Handle error (e.g., show a dialog)\r\n      print(response.error!.message);\r\n    }\r\n  }\r\n\r\n  void signIn() async {\r\n    final response = await Supabase.instance.client.auth.signInWithPassword(\r\n      email: emailController.text,\r\n      password: passwordController.text,\r\n    );\r\n    if (response.error == null) {\r\n      Navigator.pushReplacement(\r\n        context,\r\n        MaterialPageRoute(builder: (context) => HomeScreen()),\r\n      );\r\n    } else {\r\n      // Handle error (e.g., show a dialog)\r\n      print(response.error!.message);\r\n    }\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Scaffold(\r\n      appBar: AppBar(title: Text('Supabase Authentication')),\r\n      body: Padding(\r\n        padding: const EdgeInsets.all(16.0),\r\n        child: Column(\r\n          children: [\r\n            TextField(\r\n              controller: emailController,\r\n              decoration: InputDecoration(labelText: 'Email'),\r\n            ),\r\n            TextField(\r\n              controller: passwordController,\r\n              decoration: InputDecoration(labelText: 'Password'),\r\n              obscureText: true,\r\n            ),\r\n            SizedBox(height: 20),\r\n            ElevatedButton(onPressed: signUp, child: Text('Sign Up')),\r\n            ElevatedButton(onPressed: signIn, child: Text('Sign In')),\r\n          ],\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n"
        }
    ]
}
{
    "sourceFile": "lib/controllers/auth_controller.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 12,
            "patches": [
                {
                    "date": 1733477259863,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1733477280329,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n \r\n   Future<void> signUp(BuildContext context) async {\r\n     final response = await Supabase.instance.client.auth.signUp(\r\n       emailController.text,\r\n-      passwordController.text,\r\n+      passwordController.text, password: '',\r\n     );\r\n \r\n     if (response.error == null) {\r\n       // Navigate to HomeScreen after successful sign-up\r\n"
                },
                {
                    "date": 1733477297568,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n \r\n   Future<void> signUp(BuildContext context) async {\r\n     final response = await Supabase.instance.client.auth.signUp(\r\n       emailController.text,\r\n-      passwordController.text, password: '',\r\n+      passwordController.text,\r\n     );\r\n \r\n     if (response.error == null) {\r\n       // Navigate to HomeScreen after successful sign-up\r\n"
                },
                {
                    "date": 1733477390654,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,44 +1,45 @@\n-// lib/controllers/auth_controller.dart\r\n import 'package:flutter/material.dart';\r\n import 'package:supabase_flutter/supabase_flutter.dart';\r\n \r\n-class AuthController extends ChangeNotifier {\r\n-  final TextEditingController emailController = TextEditingController();\r\n-  final TextEditingController passwordController = TextEditingController();\r\n+class AuthController with ChangeNotifier {\r\n+  final SupabaseClient client;\r\n \r\n-  Future<void> signUp(BuildContext context) async {\r\n-    final response = await Supabase.instance.client.auth.signUp(\r\n-      emailController.text,\r\n-      passwordController.text,\r\n-    );\r\n+  AuthController(this.client);\r\n \r\n+  User? _user;\r\n+  User? get user => _user;\r\n+\r\n+  Future<void> signUp(String email, String password) async {\r\n+    final response = await client.auth.signUp(email, password);\r\n     if (response.error == null) {\r\n-      // Navigate to HomeScreen after successful sign-up\r\n-      Navigator.pushReplacement(\r\n-        context,\r\n-        MaterialPageRoute(builder: (context) => HomeScreen()),\r\n-      );\r\n+      _user = response.user;\r\n+      notifyListeners();\r\n     } else {\r\n-      // Handle error (e.g., show a dialog)\r\n-      print(response.error!.message);\r\n+      throw Exception(response.error!.message);\r\n     }\r\n   }\r\n \r\n-  Future<void> signIn(BuildContext context) async {\r\n-    final response = await Supabase.instance.client.auth.signInWithPassword(\r\n-      email: emailController.text,\r\n-      password: passwordController.text,\r\n+  Future<void> signIn(String email, String password) async {\r\n+    final response = await client.auth.signInWithPassword(\r\n+      email: email,\r\n\\ No newline at end of file\n+      password: password,\r\n     );\r\n-\r\n     if (response.error == null) {\r\n-      // Navigate to HomeScreen after successful sign-in\r\n-      Navigator.pushReplacement(\r\n-        context,\r\n-        MaterialPageRoute(builder: (context) => HomeScreen()),\r\n-      );\r\n+      _user = response.user;\r\n+      notifyListeners();\r\n     } else {\r\n-      // Handle error (e.g., show a dialog)\r\n-      print(response.error!.message);\r\n+      throw Exception(response.error!.message);\r\n     }\r\n   }\r\n-}\n+\r\n+  Future<void> signOut() async {\r\n+    await client.auth.signOut();\r\n+    _user = null;\r\n+    notifyListeners();\r\n+  }\r\n+\r\n+  void checkUser() {\r\n+    _user = client.auth.currentUser;\r\n+    notifyListeners();\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1733479847663,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,45 +1,45 @@\n-import 'package:flutter/material.dart';\r\n-import 'package:supabase_flutter/supabase_flutter.dart';\r\n+// import 'package:flutter/material.dart';\r\n+// import 'package:supabase_flutter/supabase_flutter.dart';\r\n \r\n-class AuthController with ChangeNotifier {\r\n-  final SupabaseClient client;\r\n+// class AuthController with ChangeNotifier {\r\n+//   final SupabaseClient client;\r\n \r\n-  AuthController(this.client);\r\n+//   AuthController(this.client);\r\n \r\n-  User? _user;\r\n-  User? get user => _user;\r\n+//   User? _user;\r\n+//   User? get user => _user;\r\n \r\n-  Future<void> signUp(String email, String password) async {\r\n-    final response = await client.auth.signUp(email, password);\r\n-    if (response.error == null) {\r\n-      _user = response.user;\r\n-      notifyListeners();\r\n-    } else {\r\n-      throw Exception(response.error!.message);\r\n-    }\r\n-  }\r\n+//   Future<void> signUp(String email, String password) async {\r\n+//     final response = await client.auth.signUp(email, password);\r\n+//     if (response.error == null) {\r\n+//       _user = response.user;\r\n+//       notifyListeners();\r\n+//     } else {\r\n+//       throw Exception(response.error!.message);\r\n+//     }\r\n+//   }\r\n \r\n-  Future<void> signIn(String email, String password) async {\r\n-    final response = await client.auth.signInWithPassword(\r\n-      email: email,\r\n-      password: password,\r\n-    );\r\n-    if (response.error == null) {\r\n-      _user = response.user;\r\n-      notifyListeners();\r\n\\ No newline at end of file\n-    } else {\r\n-      throw Exception(response.error!.message);\r\n-    }\r\n-  }\r\n+//   Future<void> signIn(String email, String password) async {\r\n+//     final response = await client.auth.signInWithPassword(\r\n+//       email: email,\r\n+//       password: password,\r\n+//     );\r\n+//     if (response.error == null) {\r\n+//       _user = response.user;\r\n+//       notifyListeners();\r\n+//     } else {\r\n+//       throw Exception(response.error!.message);\r\n+//     }\r\n+//   }\r\n \r\n-  Future<void> signOut() async {\r\n-    await client.auth.signOut();\r\n-    _user = null;\r\n-    notifyListeners();\r\n-  }\r\n+//   Future<void> signOut() async {\r\n+//     await client.auth.signOut();\r\n+//     _user = null;\r\n+//     notifyListeners();\r\n+//   }\r\n \r\n-  void checkUser() {\r\n-    _user = client.auth.currentUser;\r\n-    notifyListeners();\r\n-  }\r\n-}\n+//   void checkUser() {\r\n+//     _user = client.auth.currentUser;\r\n+//     notifyListeners();\r\n+//   }\r\n+// }\r\n"
                },
                {
                    "date": 1733479855663,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,45 +1,45 @@\n-// import 'package:flutter/material.dart';\r\n-// import 'package:supabase_flutter/supabase_flutter.dart';\r\n+import 'package:flutter/material.dart';\r\n+import 'package:supabase_flutter/supabase_flutter.dart';\r\n \r\n-// class AuthController with ChangeNotifier {\r\n-//   final SupabaseClient client;\r\n+class AuthController with ChangeNotifier {\r\n+  final SupabaseClient client;\r\n \r\n-//   AuthController(this.client);\r\n+  AuthController(this.client);\r\n \r\n-//   User? _user;\r\n-//   User? get user => _user;\r\n+  User? _user;\r\n+  User? get user => _user;\r\n \r\n-//   Future<void> signUp(String email, String password) async {\r\n-//     final response = await client.auth.signUp(email, password);\r\n-//     if (response.error == null) {\r\n-//       _user = response.user;\r\n-//       notifyListeners();\r\n-//     } else {\r\n-//       throw Exception(response.error!.message);\r\n-//     }\r\n-//   }\r\n+  Future<void> signUp(String email, String password) async {\r\n+    final response = await client.auth.signUp(email, password, password: '');\r\n+    if (response.error == null) {\r\n+      _user = response.user;\r\n+      notifyListeners();\r\n+    } else {\r\n+      throw Exception(response.error!.message);\r\n+    }\r\n+  }\r\n \r\n-//   Future<void> signIn(String email, String password) async {\r\n-//     final response = await client.auth.signInWithPassword(\r\n-//       email: email,\r\n-//       password: password,\r\n-//     );\r\n-//     if (response.error == null) {\r\n-//       _user = response.user;\r\n-//       notifyListeners();\r\n-//     } else {\r\n-//       throw Exception(response.error!.message);\r\n-//     }\r\n-//   }\r\n+  Future<void> signIn(String email, String password) async {\r\n+    final response = await client.auth.signInWithPassword(\r\n+      email: email,\r\n+      password: password,\r\n+    );\r\n+    if (response.error == null) {\r\n+      _user = response.user;\r\n+      notifyListeners();\r\n+    } else {\r\n+      throw Exception(response.error!.message);\r\n+    }\r\n+  }\r\n \r\n-//   Future<void> signOut() async {\r\n-//     await client.auth.signOut();\r\n-//     _user = null;\r\n-//     notifyListeners();\r\n-//   }\r\n+  Future<void> signOut() async {\r\n+    await client.auth.signOut();\r\n+    _user = null;\r\n+    notifyListeners();\r\n+  }\r\n \r\n-//   void checkUser() {\r\n-//     _user = client.auth.currentUser;\r\n-//     notifyListeners();\r\n-//   }\r\n-// }\r\n+  void checkUser() {\r\n+    _user = client.auth.currentUser;\r\n+    notifyListeners();\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1733479870459,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,45 +1,45 @@\n-import 'package:flutter/material.dart';\r\n-import 'package:supabase_flutter/supabase_flutter.dart';\r\n+// import 'package:flutter/material.dart';\r\n+// import 'package:supabase_flutter/supabase_flutter.dart';\r\n \r\n-class AuthController with ChangeNotifier {\r\n-  final SupabaseClient client;\r\n+// class AuthController with ChangeNotifier {\r\n+//   final SupabaseClient client;\r\n \r\n-  AuthController(this.client);\r\n+//   AuthController(this.client);\r\n \r\n-  User? _user;\r\n-  User? get user => _user;\r\n+//   User? _user;\r\n+//   User? get user => _user;\r\n \r\n-  Future<void> signUp(String email, String password) async {\r\n-    final response = await client.auth.signUp(email, password, password: '');\r\n-    if (response.error == null) {\r\n-      _user = response.user;\r\n-      notifyListeners();\r\n-    } else {\r\n-      throw Exception(response.error!.message);\r\n-    }\r\n-  }\r\n+//   Future<void> signUp(String email, String password) async {\r\n+//     final response = await client.auth.signUp(email, password);\r\n+//     if (response.error == null) {\r\n+//       _user = response.user;\r\n+//       notifyListeners();\r\n+//     } else {\r\n+//       throw Exception(response.error!.message);\r\n+//     }\r\n+//   }\r\n \r\n-  Future<void> signIn(String email, String password) async {\r\n-    final response = await client.auth.signInWithPassword(\r\n-      email: email,\r\n-      password: password,\r\n-    );\r\n-    if (response.error == null) {\r\n-      _user = response.user;\r\n-      notifyListeners();\r\n-    } else {\r\n-      throw Exception(response.error!.message);\r\n-    }\r\n-  }\r\n+//   Future<void> signIn(String email, String password) async {\r\n+//     final response = await client.auth.signInWithPassword(\r\n+//       email: email,\r\n+//       password: password,\r\n+//     );\r\n+//     if (response.error == null) {\r\n+//       _user = response.user;\r\n+//       notifyListeners();\r\n+//     } else {\r\n+//       throw Exception(response.error!.message);\r\n+//     }\r\n+//   }\r\n \r\n-  Future<void> signOut() async {\r\n-    await client.auth.signOut();\r\n-    _user = null;\r\n-    notifyListeners();\r\n-  }\r\n+//   Future<void> signOut() async {\r\n+//     await client.auth.signOut();\r\n+//     _user = null;\r\n+//     notifyListeners();\r\n+//   }\r\n \r\n-  void checkUser() {\r\n-    _user = client.auth.currentUser;\r\n-    notifyListeners();\r\n-  }\r\n-}\r\n+//   void checkUser() {\r\n+//     _user = client.auth.currentUser;\r\n+//     notifyListeners();\r\n+//   }\r\n+// }\r\n"
                },
                {
                    "date": 1733480281912,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,4 +42,58 @@\n //     _user = client.auth.currentUser;\r\n //     notifyListeners();\r\n //   }\r\n // }\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+import 'package:flutter/material.dart';\r\n+import 'package:supabase_flutter/supabase_flutter.dart';\r\n+\r\n+class AuthController with ChangeNotifier {\r\n+  final SupabaseClient client;\r\n+\r\n+  AuthController(this.client);\r\n+\r\n+  User? _user;\r\n+  User? get user => _user;\r\n+\r\n+  Future<void> signUp(String email, String password) async {\r\n+    final response = await client.auth.signUp(email, password);\r\n+    if (response.error == null) {\r\n+      _user = response.user;\r\n+      notifyListeners();\r\n+    } else {\r\n+      throw Exception(response.error!.message);\r\n+    }\r\n+  }\r\n+\r\n+  Future<void> signIn(String email, String password) async {\r\n+    final response = await client.auth.signInWithPassword(\r\n+      email: email,\r\n+      password: password,\r\n+    );\r\n+    if (response.error == null) {\r\n+      _user = response.user;\r\n+      notifyListeners();\r\n+    } else {\r\n+      throw Exception(response.error!.message);\r\n+    }\r\n+  }\r\n+\r\n+  Future<void> signOut() async {\r\n+    await client.auth.signOut();\r\n+    _user = null;\r\n+    notifyListeners();\r\n+  }\r\n+\r\n+  void checkUser() {\r\n+    _user = client.auth.currentUser;\r\n+    notifyListeners();\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1733480379022,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,9 @@\n   User? _user;\r\n   User? get user => _user;\r\n \r\n   Future<void> signUp(String email, String password) async {\r\n-    final response = await client.auth.signUp(email, password);\r\n+    final response = await client.auth.signUp(email, password, password: '');\r\n     if (response.error == null) {\r\n       _user = response.user;\r\n       notifyListeners();\r\n     } else {\r\n"
                },
                {
                    "date": 1733480389782,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,9 @@\n   User? _user;\r\n   User? get user => _user;\r\n \r\n   Future<void> signUp(String email, String password) async {\r\n-    final response = await client.auth.signUp(email, password, password: '');\r\n+    final response = await client.auth.signUp(email, password, );\r\n     if (response.error == null) {\r\n       _user = response.user;\r\n       notifyListeners();\r\n     } else {\r\n"
                },
                {
                    "date": 1733480545000,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,49 +48,65 @@\n \r\n \r\n \r\n \r\n-\r\n-\r\n-\r\n import 'package:flutter/material.dart';\r\n import 'package:supabase_flutter/supabase_flutter.dart';\r\n \r\n class AuthController with ChangeNotifier {\r\n   final SupabaseClient client;\r\n \r\n-  AuthController(this.client);\r\n+  AuthController(this.client) {\r\n+    checkUser();\r\n+  }\r\n \r\n   User? _user;\r\n   User? get user => _user;\r\n \r\n+  bool get isLoggedIn => _user != null;\r\n+\r\n   Future<void> signUp(String email, String password) async {\r\n-    final response = await client.auth.signUp(email, password, );\r\n-    if (response.error == null) {\r\n-      _user = response.user;\r\n-      notifyListeners();\r\n-    } else {\r\n-      throw Exception(response.error!.message);\r\n+    try {\r\n+      final response = await client.auth.signUp(\r\n+        email: email,\r\n+        password: password,\r\n+      );\r\n+      if (response.user != null) {\r\n+        _user = response.user;\r\n+        notifyListeners();\r\n+      } else {\r\n+        throw Exception(response.error?.message ?? 'Sign-up failed');\r\n+      }\r\n+    } catch (e) {\r\n+      rethrow; // Allow the caller to handle the exception\r\n     }\r\n   }\r\n \r\n   Future<void> signIn(String email, String password) async {\r\n-    final response = await client.auth.signInWithPassword(\r\n-      email: email,\r\n-      password: password,\r\n-    );\r\n-    if (response.error == null) {\r\n-      _user = response.user;\r\n-      notifyListeners();\r\n-    } else {\r\n-      throw Exception(response.error!.message);\r\n+    try {\r\n+      final response = await client.auth.signInWithPassword(\r\n+        email: email,\r\n+        password: password,\r\n+      );\r\n+      if (response.user != null) {\r\n+        _user = response.user;\r\n+        notifyListeners();\r\n+      } else {\r\n+        throw Exception(response.error?.message ?? 'Sign-in failed');\r\n+      }\r\n+    } catch (e) {\r\n+      rethrow;\r\n     }\r\n   }\r\n \r\n   Future<void> signOut() async {\r\n-    await client.auth.signOut();\r\n-    _user = null;\r\n-    notifyListeners();\r\n+    try {\r\n+      await client.auth.signOut();\r\n+      _user = null;\r\n+      notifyListeners();\r\n+    } catch (e) {\r\n+      rethrow;\r\n+    }\r\n   }\r\n \r\n   void checkUser() {\r\n     _user = client.auth.currentUser;\r\n"
                },
                {
                    "date": 1733480566566,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,9 @@\n       if (response.user != null) {\r\n         _user = response.user;\r\n         notifyListeners();\r\n       } else {\r\n-        throw Exception(response.error?.message ?? 'Sign-up failed');\r\n+        throw Exception( 'Sign-up failed');\r\n       }\r\n     } catch (e) {\r\n       rethrow; // Allow the caller to handle the exception\r\n     }\r\n"
                },
                {
                    "date": 1733480579198,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,9 +90,9 @@\n       if (response.user != null) {\r\n         _user = response.user;\r\n         notifyListeners();\r\n       } else {\r\n-        throw Exception(response.error?.message ?? 'Sign-in failed');\r\n+        throw Exception( 'Sign-in failed');\r\n       }\r\n     } catch (e) {\r\n       rethrow;\r\n     }\r\n"
                }
            ],
            "date": 1733477259863,
            "name": "Commit-0",
            "content": "// lib/controllers/auth_controller.dart\r\nimport 'package:flutter/material.dart';\r\nimport 'package:supabase_flutter/supabase_flutter.dart';\r\n\r\nclass AuthController extends ChangeNotifier {\r\n  final TextEditingController emailController = TextEditingController();\r\n  final TextEditingController passwordController = TextEditingController();\r\n\r\n  Future<void> signUp(BuildContext context) async {\r\n    final response = await Supabase.instance.client.auth.signUp(\r\n      emailController.text,\r\n      passwordController.text,\r\n    );\r\n\r\n    if (response.error == null) {\r\n      // Navigate to HomeScreen after successful sign-up\r\n      Navigator.pushReplacement(\r\n        context,\r\n        MaterialPageRoute(builder: (context) => HomeScreen()),\r\n      );\r\n    } else {\r\n      // Handle error (e.g., show a dialog)\r\n      print(response.error!.message);\r\n    }\r\n  }\r\n\r\n  Future<void> signIn(BuildContext context) async {\r\n    final response = await Supabase.instance.client.auth.signInWithPassword(\r\n      email: emailController.text,\r\n      password: passwordController.text,\r\n    );\r\n\r\n    if (response.error == null) {\r\n      // Navigate to HomeScreen after successful sign-in\r\n      Navigator.pushReplacement(\r\n        context,\r\n        MaterialPageRoute(builder: (context) => HomeScreen()),\r\n      );\r\n    } else {\r\n      // Handle error (e.g., show a dialog)\r\n      print(response.error!.message);\r\n    }\r\n  }\r\n}"
        }
    ]
}